name: gimp
version: 3.0.0-RC2
summary: GNU Image Manipulation Program
description: |
  Whether you are a graphic designer, photographer, illustrator, or scientist,
  GIMP provides you with sophisticated tools to get your job done. You can
  further enhance your productivity with GIMP thanks to many customization
  options and 3rd party plugins.

grade: stable
confinement: strict
base: core24
compression: lzo

platforms:
  arm64:
  amd64:

layout:
  /etc/gimp:
    bind: $SNAP/etc/gimp
  /usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/babl-0.1:
    bind: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/babl-0.1
  /usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gegl-0.4:
    bind: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gegl-0.4
  /usr/share/locale:
    bind: $SNAP/usr/share/locale

slots:
  dbus-gimp:
    interface: dbus
    bus: session
    name: org.gimp.GIMP.UI

environment:
  GI_TYPELIB_PATH: $SNAP/gnome-platform/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gjs/girepository-1.0:$GI_TYPELIB_PATH
  LD_LIBRARY_PATH: $SNAP/lib:$SNAP/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR:$SNAP/gnome-platform/usr/lib:$SNAP/gnome-platform/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR:$SNAP/usr/lib:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/lapack:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/blas
  # Ensure the gmic plugin can correctly locate the QT plugins
  QT_PLUGIN_PATH: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/qt6/plugins

apps:
  gimp:
    command: usr/bin/gimp
    extensions: [gnome]
    desktop: usr/share/applications/gimp.desktop
    common-id: org.gimp.GIMP
    slots:
      - dbus-gimp
    plugs:
      - cups-control
      - browser-support
      - home
      - network
      - removable-media
      - unity7

parts:
  babl:
    plugin: meson
    source: https://github.com/GNOME/babl.git
    source-tag: BABL_0_1_110
    meson-parameters:
      - --prefix=/usr
      - --buildtype=release
      - -Dwith-docs=false
    build-packages:
      - w3m

  gegl:
    after:
      - babl
    source: https://github.com/GNOME/gegl.git
    source-tag: GEGL_0_4_50
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - --buildtype=release
      - -Ddocs=false
      - -Dworkshop=true
    build-environment:
      - C_INCLUDE_PATH: /snap/gnome-46-2404-sdk/current/usr/include/librsvg-2.0:${C_INCLUDE_PATH:+:$C_INCLUDE_PATH}
    build-packages:
      - ffmpeg
      - libexiv2-dev
      - libfftw3-dev
      - libgexiv2-2
      - libglu1-mesa-dev
      - liblensfun-dev
      - libluajit-5.1-dev
      - libmaxflow-dev
      - libopenexr-dev
      - libraw-dev
      - libsdl2-dev
      - libspiro-dev
      - libsuitesparse-dev
      - libv4l-dev
      - libwebp-dev
    stage-packages:
      - ffmpeg
      - libamd3
      - libbtf2
      - libcamd3
      - libccolamd3
      - libcholmod5
      - libcolamd3
      - libcxsparse4
      - libexiv2-27
      - libgexiv2-2
      - libgraphblas7
      - libklu2
      - liblapack3
      - libldl3
      - liblensfun1
      - libluajit-5.1-2
      - libmaxflow0
      - libopenexr-3-1-30
      - libraw-bin
      - librbio4
      - libsdl2-2.0-0
      - libspiro1
      - libspqr4
      - libumfpack6
      - libv4l-0

  gimp:
    after:
      - babl
      - gegl
    plugin: meson
    source: https://github.com/GNOME/gimp.git
    override-pull: |
      tag="$(echo "GIMP_${SNAPCRAFT_PROJECT_VERSION}" | tr "." "_"  | tr "-" "_")"
      git clone -b "$tag" https://github.com/GNOME/gimp.git "$CRAFT_PART_SRC"
      sed -i "s|gitlab.gnome.org|github.com|" "$CRAFT_PART_SRC"/.gitmodules
      git submodule update --init
      sed -i 's|^Icon=.*|Icon=/usr/share/icons/hicolor/256x256/apps/gimp.png|' desktop/gimp.desktop.in.in
    meson-parameters:
      - --prefix=/usr
      - --buildtype=release
      - -Dgi-docgen=disabled
      - -Dg-ir-doc=false
      - -Dbuild-id=org.gimp.GIMP.snapcraft.preview
      - -Dbug-report-url=https://github.com/snapcrafters/gimp/issues/
      - -Dcheck-update=no
      - -Denable-default-bin=enabled
      - -Drelocatable-bundle=yes
      - -Dlibunwind=true
    build-environment:
      - BABL_PATH: $CRAFT_STAGE/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/babl-0.1
      - GEGL_PATH: $CRAFT_STAGE/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gegl-0.4
      - GI_TYPELIB_PATH: $CRAFT_STAGE/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/girepository-1.0:$GI_TYPELIB_PATH
      - LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$CRAFT_STAGE/usr/lib:$CRAFT_STAGE/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR
      - C_INCLUDE_PATH: /snap/gnome-46-2404-sdk/current/usr/include/librsvg-2.0:${C_INCLUDE_PATH:+:$C_INCLUDE_PATH}
    build-packages:
      - automake
      - intltool
      - iso-codes
      - libaa1-dev
      - libappstream-glib-dev
      - libart-2.0-dev
      - libbz2-dev
      - libcairo-gobject2
      - libexif-dev
      - libexpat1-dev
      - libfftw3-dev
      - libgexiv2-2
      - libgpm-dev
      - libice-dev
      - libluajit-5.1-dev
      - liblzma-dev
      - libmng-dev
      - libmypaint-dev
      - libopenexr-dev
      - libslang2-dev
      - libsm-dev
      - libunwind-dev
      - libwebp-dev
      - libwmf-dev
      - libxmu-dev
      - libxpm-dev
      - luajit
      - poppler-data
      - xdg-utils
      - xsltproc
    stage-packages:
      - evince
      - ghostscript
      - iso-codes
      - libaa1
      - libappstream-glib8
      - libart-2.0-2
      - libbz2-1.0
      - libexif12
      - libfftw3-bin
      - libgexiv2-dev
      - libgpm2
      - libheif1
      - libluajit-5.1-2
      - liblzma5
      - libmng2
      - libmypaint-1.5-1
      - libmypaint-common
      - libopenexr-3-1-30
      - libslang2
      - libsndio7.0
      - libunwind8
      - libwebp7
      - libwebpdemux2
      - libwebpmux3
      - libwmf-0.2-7
      - libxmu6
      - libxpm4
      - libxv1
      - lua-lgi
      - luajit
      - mypaint-brushes
      - mypaint-data
      - poppler-data

  # TODO(jnsgruk): Re-enable once compatibility is restored with GIMP 3.0
  # gmic:
  #   after: [gimp]
  #   plugin: nil
  #   override-pull: |
  #     VERSION="v.3.4.2"
  #     git clone -b "$VERSION" https://github.com/GreycLab/gmic.git
  #     git clone -b "$VERSION" https://github.com/GreycLab/CImg.git
  #     git clone -b "$VERSION" https://github.com/c-koi/gmic-qt.git

  #     # Force this extra online fetch to happen during the pull phase.
  #     # This build takes a long time on Launchpad, and if we wait until
  #     # the build phase, by the time we get there the proxy token has
  #     # expired - so force it to happen here.
  #     wget -qO gmic/src/gmic_stdlib_community.h "https://gmic.eu/gmic_stdlib_community$(echo "${VERSION}" | tr -d "v.").h"
  #   build-environment:
  #     - QT_SELECT: qt6
  #   build-packages:
  #     - pkg-config
  #     - qmake6-bin
  #     - qt6-base-dev
  #     - qt6-l10n-tools
  #     - qt6-tools-dev
  #     - qt6-wayland-dev
  #     - qtchooser
  #     - wget
  #   stage-packages:
  #     - libcurl4
  #     - libdouble-conversion3
  #     - libfftw3-bin
  #     - libffi8
  #     - libgraphicsmagick-q16-3
  #     - libgraphicsmagick++-q16-12
  #     - libjpeg-turbo8
  #     - libopencv-core406t64
  #     - libopencv-highgui406t64
  #     - libopencv-video406t64
  #     - libopenexr-3-1-30
  #     - libpng16-16
  #     - libqt6core6t64
  #     - libqt6gui6t64
  #     - libqt6network6t64
  #     - libqt6widgets6t64
  #     - qt6-wayland
  #   override-build: |
  #     qtchooser -install qt6 "$(which qmake6)" || true
  #     make -C gmic/src CImg.h gmic_stdlib_community.h
  #     cd gmic-qt
  #     qmake HOST=gimp3
  #     make
  #     install -Dm 0755 $CRAFT_PART_BUILD/gmic-qt/gmic_gimp_qt \
  #       $CRAFT_PART_INSTALL/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gimp/3.0/plug-ins/gmic_gimp_qt/gmic_gimp_qt
